Solve the following exercises with the language you like most or pseudocode.

1) Delete all duplicated elements from a given List
   (The list is not necessary sorted)

    Examples:
        Input: [2,1,1]
        Output: [1,2]

        Input: [1,3,2,1,3]
        Output: [1,2,3]


2) Given dictionary, where words can be any length, and an Input String.
   Search for all the substrings from the given String that are in the
   dictionary.

    Example:
        Input:
            Dictionary: ["a","aa","aaa"]
            String: "aaabaa"
        Output: ["a","a","a","aa","aa","aaa","a","a","aa"]


3) Given a '.txt' file, write in a new file:
    - the original text 
    - the original text with the duplicated words removed
    - the duplicated words 

    Example:
        Input:
            test.txt > Si nosotros tomamos agua entonces orinamos.
                       Los peces tambien toman agua entonces tambien
                       lo hacen?
        Output: 
            result.txt > Si nosotros tomamos agua entonces orinamos.
                         Los peces tambien toman agua entonces tambien
                         lo hacen?
                         
                         Si nosotros tomamos orinamos.
                         Los peces lo hacen?
                         
                         tambien, entonces, agua



4) Combine the k linked list into one sorted linked list. 
   Analize and comment how is the complexity, computationally speaking,
   of your answer.
   Remember each element is defined like this:
        -------------     ---------
        |   Value   |     |       |  where neighboor is a pointer and value
        | Neighboor | --> |       |  an Integer
        -------------     ---------  

    Example:
        Input: [1 -> 4 -> 5] , [1 -> 3 -> 4] , [2 -> 6] 
        Output: [1-> 1-> 2-> 3-> 4-> 4-> 5-> 6]

5) Given a string 's' and a pattern 'p', create the pattern coincidence for special 
   patterns for '?' and '*'.

    '?' Matches with any single char.
    '*' Matches with any sequence of chars.

    The coincidence must cover all the input string (not partially).
    Note:
        's' can be composed by lowcase letters from a-z and chars like '?' and '*'.

    Example 1:
        Input: s = "aa"
               p = "a"
        Output: False

    "a" doesn't match with all the string "aa".

    Example 2:
        Input: s = "aa"
               p = "*"
        Output: True

    '*' matches with any sequence

    Example 3:
        Input: s = "cb"
               p = "? a"
        Output: False
    
    '?' matches with 'c' but the second char 'a' doesn't match with 'b'

1) If we list all the natural numbers below 10 that are multiples of 3 or 5,
   we get 3, 5, 6 and 9. The sum of these multiples is 23.

   Find the sum of all the multiples of 3 or 5 below 1000.


2) Each new term in the Fibonacci sequence is generated by adding the previous
   two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values 
   do not exceed four million, find the sum of the even-valued terms.


3) The prime factors of 13195 are 5, 7, 13 and 29.
   What is the largest prime factor of the number 600851475143 ?
