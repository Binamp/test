La idea de estos ejercicios, es realizarlos en el lenguaje que les sea comodo, y hacerlos en el menor tiempo posible, luego de proponer una solucion.
Les pido que si ya han visto estos ejercicios me digan y les envio otros y... no busquen respuestas en internet.
Cualquier consulta, o duda de los enunciados o como resolverlos es bienvenida. Cuando quieran, podemos hacer una llamada y charlar de los enunciados.

Ejercicios:

1)Dada una lista ordenada, eliminar todos los duplicados para que cada elemento aparezca solo una vez. 
Ejemplo 1:
Entrada: 1->1->2
Output: 1->2

Ejemplo 2:
Entrada: 1->1->2->3->3
salida: 1->2->3

2)Dado un diccionario/mapa de palabras, que pueden ser de cualquier largo, y tomando una palabra de entrada buscar todas las secciones (sub strings) que esten contenidas en el diccionario.

Ejemplo, Diccionario : a, aa, aaa , Palabra de entrada : aaabaa, la salida deberia ser: a, a, a, aa, aa, aaa, a, a, aa.

3)Dado un archivo de texto plano, escribir en un archivo o consola el mismo texto removiendo las palabras duplicadas. Se debe mantener el orden del texto original sin las palabras duplicadas.
Ejemplo, el archivo dice: Yo soy bueno. Vos sos bueno. La salida deberia ser Yo soy Vos sos

4)Combine k las listas enlazadas ordenadas y devuélvalas como una lista ordenada. Analizar y describir su complejidad.

Ejemplo:
Entrada: [1-> 4-> 5, 1-> 3-> 4, 2-> 6] 
Salida: 1-> 1-> 2-> 3-> 4-> 4-> 5-> 6

5)Dada una cadena de entrada ( s) y un patrón ( p), implemente la coincidencia de patrones de comodines con soporte para '?'y '*'.

'?' Coincide con cualquier carácter individual.
'*' Coincide con cualquier secuencia de caracteres (incluida la secuencia vacía).
La coincidencia debe cubrir toda la cadena de entrada (no parcial).

Nota:

s Podría estar vacío y contiene solo letras minúsculas a-z.
podría estar vacío y contiene solo letras minúsculas a-z, y caracteres como ? o  *.
Ejemplo 1:

Entrada:
s = "aa"
p = "a"
Salida: falso
 Explicación: "a" no coincide con toda la cadena "aa".
Ejemplo 2:

Entrada:
s = "aa"
p = "*"
Salida: verdadero
 Explicación:  '*' coincide con cualquier secuencia.
Ejemplo 3:

Entrada:
s = "cb"
p = "? a"
Salida: falso
 Explicación:  '?' coincide con 'c', pero la segunda letra es 'a', que no coincide con 'b'.
Ejemplo 4:

Entrada:
s = "adceb"
p = "* a * b"
Salida: verdadero
 Explicación:  El primer '*' coincide con la secuencia vacía, mientras que el segundo '*' coincide con la subcadena "dce".
Ejemplo 5:

Entrada:
s = "acdcb"
p = "a * c? b"
Salida: falso
